plugins {
    id 'java'
    id 'application'

    id 'com.github.johnrengelman.shadow' version '5.0.0'
    id 'edu.sc.seis.macAppBundle' version '2.3.0'
    id 'edu.sc.seis.launch4j' version '2.4.6'
    id 'net.minecrell.licenser' version '0.4.1'
}

sourceCompatibility = '1.7'
targetCompatibility = '1.7'

group = 'com.atlauncher'
version = '3.2.7.0'

repositories {
    mavenCentral()
    maven {
        url 'https://libraries.minecraft.net'
    }
}

dependencies {
    compile 'com.google.code.gson:gson:2.2.4'
    compile 'com.googlecode.json-simple:json-simple:1.1.1'
    compile 'org.tukaani:xz:1.5'
    compile 'com.mojang:authlib:1.5.21'

    testCompile 'junit:junit:4.11'
}

application {
    mainClassName = 'com.atlauncher.App'
}

jar {
    manifest {
        attributes(
                'SplashScreen-Image': '/assets/image/SplashScreen.png',
                'Implementation-Title': project.name,
                'Implementation-Version': version,
                'Implementation-Vender': 'ATLauncher',
                'Main-Class': 'com.atlauncher.App'
        )
    }
}

license {
    header = project.file('LICENSEHEADER')
    include "**/*.java"
    exclude 'de/zh32/**/*.java'
    exclude 'io/github/**/*.java'
    exclude 'net/minecraft/**/*.java'
    newLine = false
}

shadowJar {
    classifier = ''
}

macAppBundle {
    mainClassName = 'com.atlauncher.App'
    icon = 'src/main/resources/assets/image/Icon.icns'
    javaProperties.put('user.dir', '$APP_ROOT/Contents/Java')
    javaProperties.put("apple.laf.useScreenMenuBar", "true")
}

launch4j {
    outfile = "ATLauncher-${project.version}.exe"
    mainClassName = 'com.atlauncher.App'
    icon = "${projectDir}/src/main/resources/assets/image/Icon.ico"
    initialHeapPercent = 5;
    maxHeapPercent = 100;
}

artifacts {
    archives shadowJar
    archives file(project.tasks.jar.getArchivePath().getPath().replace(".jar", ".exe").replace("libs", "launch4j"))
    archives file(project.tasks.jar.getArchivePath().getPath().replace(".jar", ".zip").replace("libs", "distributions"))
}

task copyArtifacts(type: Copy) {
    dependsOn build
    from shadowJar
    from file(project.tasks.jar.getArchivePath().getPath().replace(".jar", ".exe").replace("libs", "launch4j"))
    from file(project.tasks.jar.getArchivePath().getPath().replace(".jar", ".zip").replace("libs", "distributions"))
    into "${projectDir}/dist"
}

clean.doFirst {
    delete "${projectDir}/dist"
}

build.doLast {
    println "ATLauncher has been built. Distribution files are located in the dist directory"
}
build.finalizedBy copyArtifacts
build.dependsOn(createExe)
build.dependsOn(createAppZip)
